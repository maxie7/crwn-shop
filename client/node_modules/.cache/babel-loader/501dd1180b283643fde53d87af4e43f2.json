{"ast":null,"code":"var _jsxFileName = \"/home/maxie/code/react/crwn-clothing/src/pages/collection/collection.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport CollectionItem from '../../components/collection-item/collection-item.component';\nimport { selectCollection } from '../../redux/shop/shop.selectors';\nimport { CollectionPageContainer, CollectionTitle, CollectionItemsContainer } from './collection.styles';\nimport { firestore } from '../../firebase/firebase.utils';\n\nconst CollectionPage = ({\n  collection\n}) => {\n  useEffect(() => {\n    console.log('...subscribing...');\n    const unsubscribeFromCollections = firestore.collection('collections').onSnapshot(snapshot => console.log(snapshot));\n    return () => {\n      console.log('...unsubscribing...');\n      unsubscribeFromCollections();\n    };\n  }, []);\n  const {\n    title,\n    items\n  } = collection;\n  return React.createElement(CollectionPageContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(CollectionTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, title), React.createElement(CollectionItemsContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, items.map(item => React.createElement(CollectionItem, {\n    key: item.id,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }))));\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);","map":{"version":3,"sources":["/home/maxie/code/react/crwn-clothing/src/pages/collection/collection.component.jsx"],"names":["React","useEffect","connect","CollectionItem","selectCollection","CollectionPageContainer","CollectionTitle","CollectionItemsContainer","firestore","CollectionPage","collection","console","log","unsubscribeFromCollections","onSnapshot","snapshot","title","items","map","item","id","mapStateToProps","state","ownProps","match","params","collectionId"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,cAAP,MAA2B,4DAA3B;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AAEA,SACEC,uBADF,EAEEC,eAFF,EAGEC,wBAHF,QAIO,qBAJP;AAMA,SAAQC,SAAR,QAAwB,+BAAxB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACzCT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,UAAMC,0BAA0B,GAAGL,SAAS,CAACE,UAAV,CAAqB,aAArB,EAAoCI,UAApC,CAA+CC,QAAQ,IAAIJ,OAAO,CAACC,GAAR,CAAYG,QAAZ,CAA3D,CAAnC;AACA,WAAO,MAAM;AACXJ,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAC,MAAAA,0BAA0B;AAC3B,KAHD;AAID,GAPQ,EAON,EAPM,CAAT;AASA,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBP,UAAzB;AACA,SACE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBM,KAAnB,CADF,EAEE,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIC,KAAK,CAACC,GAAN,CAAWC,IAAI,IAAM,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAA8B,IAAA,IAAI,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,CADJ,CAFF,CADF;AAQD,CAnBD;;AAqBA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC5Cb,EAAAA,UAAU,EAAEN,gBAAgB,CAACmB,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,YAAvB,CAAhB,CAAqDJ,KAArD;AADgC,CAAtB,CAAxB;;AAIA,eAAepB,OAAO,CAACmB,eAAD,CAAP,CAAyBZ,cAAzB,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport { connect } from 'react-redux';\n\nimport CollectionItem from '../../components/collection-item/collection-item.component';\nimport { selectCollection } from '../../redux/shop/shop.selectors';\n\nimport {\n  CollectionPageContainer ,\n  CollectionTitle,\n  CollectionItemsContainer\n} from './collection.styles';\n\nimport {firestore} from '../../firebase/firebase.utils';\n\nconst CollectionPage = ({ collection }) => {\n  useEffect(() => {\n    console.log('...subscribing...');\n    const unsubscribeFromCollections = firestore.collection('collections').onSnapshot(snapshot => console.log(snapshot))\n    return () => {\n      console.log('...unsubscribing...');\n      unsubscribeFromCollections();\n    }\n  }, []);\n\n  const { title, items } = collection;\n  return (\n    <CollectionPageContainer>\n      <CollectionTitle>{ title }</CollectionTitle>\n      <CollectionItemsContainer>\n        { items.map( item => ( <CollectionItem key={item.id} item={item} />) ) }\n      </CollectionItemsContainer>\n    </CollectionPageContainer>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);"]},"metadata":{},"sourceType":"module"}